<?xml version="1.0"?>
<project>

	<target name="clean" description="remove all build products">
		<delete dir="build"  if="${directory::exists('build')}" />
	</target>

	<target name="init" >
		<mkdir dir="build" />
		<mkdir dir="build\sql" />
		<mkdir dir="build\coverage" />
		<mkdir dir="build\documentation" />
	</target>

	<target name="getSubversionRevision" depends="init">
		<property name="svn.revision" value="0" overwrite="false"/>
		<!-- if we are running under cruise control then retrieve subversion revision number -->
		<!-- if test="${property::exists('CCNetLabel')}" -->
			<echo message="Retrieving Subversion revision number"/>
			<exec
					program="${svn.exe}"
					commandline='log "${directory::get-current-directory()}" --xml --limit 1'
					output="build/revision.xml"
					failonerror="false"/>
			<xmlpeek
					file="build/revision.xml"
					xpath="/log/logentry/@revision"
					property="svn.revision"
					failonerror="false"/>
			<echo message="Using Subversion revision number: ${svn.revision}"/>
		<!-- /if -->
	</target>

	<target name="versioninfo" depends="init" description="Generate version info for assemblies">
		<echo message="Using Subversion revision number: ${svn.revision}"/>
		<echo message="Using Assembly version number: ${Assembly.Version}"/>
		
		<delete file="build\SolutionVersionInfo.cs" if="${file::exists('build\SolutionVersionInfo.cs')}" />

		<asminfo output="build\SolutionVersionInfo.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
			</imports>
			<attributes>
				<attribute type="AssemblyVersionAttribute" value="${Assembly.Version}.${svn.revision}" />
			</attributes>
		</asminfo>
	</target>

</project>
